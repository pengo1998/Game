#include "Map.h"

int lvl1[20][25] = {
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0},
	{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
	{0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
	{0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,0},
	{0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0},
	{0,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0},
	{0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,0},
	{0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0},
	{0,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0},
	{0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,0},
	{0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0},
	{0,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0},
	{0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,0},
	{0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0},
	{0,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0},
	{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0},
	{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
	{0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}

};

Map::Map()
{
	_dirt = TextureManager::LoadTexture("res/dirt.png");
	_grass = TextureManager::LoadTexture("res/grass.png");
	_water = TextureManager::LoadTexture("res/water.png");

	LoadMap(lvl1);

	_srcRect.x = _srcRect.y = 0;
	_srcRect.w = _destRect.w = 32;
	_srcRect.h = _destRect.h = 32;


}

void Map::LoadMap(int arr[20][25])
{
	for (int r = 0; r < 20; r++) {
		for (int c = 0; c < 25; c++) {
			map[r][c] = arr[r][c];
		}
	}
}

void Map::DrawMap()
{
	int type = 0;

	for (int r = 0; r < 20; r++) {
		for (int c = 0; c < 25; c++) {
			type = map[r][c];
			_destRect.x = c * 32;
			_destRect.y = r * 32;
			switch (type) {
			case 0:
				TextureManager::Draw(_water, _srcRect, _destRect);
				break;
			case 1:
				TextureManager::Draw(_dirt, _srcRect, _destRect);
				break;
			case 2:
				TextureManager::Draw(_grass, _srcRect, _destRect);
				break;
			}
		}
	}
}
